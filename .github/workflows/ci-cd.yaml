name: CI/CD Pipeline for Iris Classification

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test-and-validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify project structure
        run: |
          echo "Checking project files..."
          test -f dvc.yaml && echo "✓ dvc.yaml exists"
          test -f Dockerfile && echo "✓ Dockerfile exists"
          test -f app.py && echo "✓ app.py exists"
          test -f requirements.txt && echo "✓ requirements.txt exists"
          test -d src && echo "✓ src directory exists"
          test -d templates && echo "✓ templates directory exists"
          echo "All critical files verified!"

      - name: Lint Python files
        run: |
          python -m py_compile src/prepare.py
          python -m py_compile src/train.py
          python -m py_compile src/evaluate.py
          python -m py_compile app.py
          echo "Python syntax check passed!"

  docker-build:
    runs-on: ubuntu-latest
    needs: test-and-validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t iris-classification:latest .

      - name: Test Docker image
        run: |
          docker run -d --name test-container -p 5000:5000 iris-classification:latest
          sleep 10
          docker ps
          docker logs test-container
          docker stop test-container
          docker rm test-container
